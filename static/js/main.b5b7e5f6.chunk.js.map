{"version":3,"sources":["components/Container/Container.module.scss","components/ContactForm/ContactForm.js","components/ContatctList/ContactList.js","components/FilterContact/FilterContact.js","components/Section/Section.js","components/Container/Container.js","App.js","hooks/useLocalStorage.js","index.js","components/ContatctList/ContactList.module.scss","components/ContactForm/ContactForm.module.scss","components/FilterContact/FilterContact.module.scss"],"names":["module","exports","ContactForm","handleSubmitForm","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","Error","reset","className","s","form","onSubmit","preventDefault","form__input","onChange","type","pattern","title","required","btn","Contacts","onDeleteContact","list","length","filterList","map","id","filterListItem","text","span","onClick","FilterContact","filter","label","filterInput","Section","children","Container","container","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setstate","useEffect","setItem","stringify","useLocalStorage","contacts","setContacts","setFilter","contact","shortid","generate","find","alert","prev","ContactList","contactId","normalizedFilter","toLowerCase","includes","getFilterContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5b7e5f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3lEOZ\"};","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport s from './ContactForm.module.scss';\r\n\r\nfunction ContactForm({ handleSubmitForm }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const value = e.currentTarget.name;\r\n    switch (value) {\r\n      case 'name':\r\n        setName(e.currentTarget.value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(e.currentTarget.value);\r\n        break;\r\n\r\n      default:\r\n        throw new Error();\r\n    }\r\n  };\r\n  const onSubmitForm = e => {\r\n    e.preventDefault();\r\n    handleSubmitForm(name, number);\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  return (\r\n    <form className={s.form} onSubmit={onSubmitForm}>\r\n      <label>\r\n        Name\r\n        <input\r\n          className={s.form__input}\r\n          onChange={handleChange}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          className={s.form__input}\r\n          onChange={handleChange}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.btn}>add contact</button>\r\n    </form>\r\n  );\r\n}\r\nContactForm.propTypes = {\r\n  handleSubmitForm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.scss';\r\n\r\nconst Contacts = ({ onDeleteContact, list }) => {\r\n  if (list.length === 0) return null;\r\n  return (\r\n    <ul className={s.filterList}>\r\n      {list.map(({ id, number, name }) => (\r\n        <li className={s.filterListItem} key={id}>\r\n          <p className={s.text}>\r\n            {name}: <span className={s.span}>{number}</span>\r\n          </p>\r\n\r\n          <button\r\n            className={s.btn}\r\n            onClick={() => onDeleteContact(id)}\r\n            type=\"button\"\r\n          >\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  list: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\r\n};\r\n\r\nexport default Contacts;\r\n","import PropTypes from 'prop-types';\r\nimport s from './FilterContact.module.scss';\r\n\r\nconst FilterContact = ({ value, filter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input className={s.filterInput} onChange={value} value={filter} />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilterContact.propTypes = {\r\n  value: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FilterContact;\r\n","const Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import s from './Container.module.scss';\r\nimport React from 'react';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import React, { useState } from 'react';\r\nimport { useLocalStorage } from './hooks/useLocalStorage';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContatctList';\r\nimport FilterContact from './components/FilterContact';\r\nimport Section from './components/Section';\r\nimport Container from './components/Container';\r\nimport shortid from 'shortid';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const takeCurrentValue = e => {\r\n    const { value } = e.currentTarget;\r\n    setFilter(value);\r\n  };\r\n  const getFilterContact = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  const handleSubmitForm = (name, number) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    if (contacts.find(({ name }) => name === contact.name)) {\r\n      alert(`${contact.name} is already in contacts`);\r\n      return;\r\n    }\r\n    setContacts(prev => [...prev, contact]);\r\n  };\r\n\r\n  const onDeleteContact = contactId => {\r\n    setContacts(prev => prev.filter(contact => contact.id !== contactId));\r\n  };\r\n\r\n  return (\r\n    <Container className=\"App\">\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm handleSubmitForm={handleSubmitForm} />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <FilterContact value={takeCurrentValue} filter={filter} />\r\n        <ContactList\r\n          onDeleteContact={onDeleteContact}\r\n          list={getFilterContact()}\r\n        />\r\n      </Section>\r\n    </Container>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const [state, setstate] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setstate];\r\n};\r\n\r\nexport { useLocalStorage };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterList\":\"ContactList_filterList__2KmUx\",\"filterListItem\":\"ContactList_filterListItem__2ETVv\",\"text\":\"ContactList_text__1B7CW\",\"span\":\"ContactList_span__1qyj2\",\"btn\":\"ContactList_btn__1V7dm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1G9zP\",\"form__input\":\"ContactForm_form__input__1LzZo\",\"btn\":\"ContactForm_btn__1JwdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterContact_label__3uOXY\",\"filterInput\":\"FilterContact_filterInput__1MU3t\"};"],"sourceRoot":""}